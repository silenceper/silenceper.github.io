<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>silenceper – Image</title><link>//localhost:1313/tags/image/</link><description>Recent content in Image on silenceper</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 10 Jul 2020 14:20:59 +0800</lastBuildDate><atom:link href="//localhost:1313/tags/image/index.xml" rel="self" type="application/rss+xml"/><item><title>将镜像tar包通过API直接push到registry仓库</title><link>//localhost:1313/blog/202007/docker-tar-push/</link><pubDate>Fri, 10 Jul 2020 14:20:59 +0800</pubDate><guid>//localhost:1313/blog/202007/docker-tar-push/</guid><description>
&lt;p>为了实现docker tar包能够直接通过页面上传，调研了一下registry的api，以及如何解析tar包（其实就是docker daemon程序实现的部分）。&lt;/p>
&lt;p>要想实现，首先要了解docker tar包中结构组成：&lt;/p>
&lt;h2>tar包结构&lt;span class="hx-absolute -hx-mt-20" id="tar包结构">&lt;/span>
&lt;a href="#tar%e5%8c%85%e7%bb%93%e6%9e%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>拿了一个包含一个镜像的tar包进行解压：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>.
├── 1ecf8bc84a7c3d60c0a6bbdd294f12a6b0e17a8269616fc9bdbedd926f74f50c
│   ├── VERSION
│   ├── json
│   └── layer.tar
├── 6f4ec1f3d7ea33646d491a705f94442f5a706e9ac9acbca22fa9b117094eb720.json
├── aaac5bde2c2bcb6cc28b1e6d3f29fe13efce6d6b669300cc2c6bfab96b942af4
│   ├── VERSION
│   ├── json
│   └── layer.tar
├── b63363f0d2ac8b3dca6f903bb5a7301bf497b1e5be8dc4f57a14e4dc649ef9bb
│   ├── VERSION
│   ├── json
│   └── layer.tar
├── c453224a84b8318b0a09a83052314dd876899d3a1a1cf2379e74bba410415059
│   ├── VERSION
│   ├── json
│   └── layer.tar
├── dd8ef1d42fbcccc87927eee94e57519c401b84437b98fcf35505fb6b7267a375
│   ├── VERSION
│   ├── json
│   └── layer.tar
├── manifest.json
└── repositories&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>文件说明：&lt;/p>
&lt;p>&lt;strong>manifest.json文件&lt;/strong>：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>[
{
&amp;#34;Config&amp;#34;:&amp;#34;6f4ec1f3d7ea33646d491a705f94442f5a706e9ac9acbca22fa9b117094eb720.json&amp;#34;,
&amp;#34;RepoTags&amp;#34;:[
&amp;#34;alpine:filebeat-6.8.7-arm64&amp;#34;
],
&amp;#34;Layers&amp;#34;:[
&amp;#34;aaac5bde2c2bcb6cc28b1e6d3f29fe13efce6d6b669300cc2c6bfab96b942af4/layer.tar&amp;#34;,
&amp;#34;dd8ef1d42fbcccc87927eee94e57519c401b84437b98fcf35505fb6b7267a375/layer.tar&amp;#34;,
&amp;#34;c453224a84b8318b0a09a83052314dd876899d3a1a1cf2379e74bba410415059/layer.tar&amp;#34;,
&amp;#34;b63363f0d2ac8b3dca6f903bb5a7301bf497b1e5be8dc4f57a14e4dc649ef9bb/layer.tar&amp;#34;,
&amp;#34;1ecf8bc84a7c3d60c0a6bbdd294f12a6b0e17a8269616fc9bdbedd926f74f50c/layer.tar&amp;#34;
]
}
]&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>manifest.json 包含了对这个tar包的描述信息，比如image config文件地址，tags说明，镜像layer信息，在解析的时候也是根据这个文件去获取关联的文件。&lt;/p>
&lt;p>&lt;strong>image config文件&lt;/strong>&lt;/p>
&lt;p>比如：&lt;code>6f4ec1f3d7ea33646d491a705f94442f5a706e9ac9acbca22fa9b117094eb720.json&lt;/code>文件：&lt;/p>
&lt;blockquote>
&lt;p>内容太多就不贴了
这里包含了镜像运行的信息，比如env，执行参数，以及镜像历史等。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>layer层文件：layer.tar&lt;/strong>&lt;/p>
&lt;p>镜像的每一层的文件信息都打包在了一个单独的&lt;code>layer.tar&lt;/code>包中，也是在上传的时候需要用到的。&lt;/p>
&lt;h2>registry api&lt;span class="hx-absolute -hx-mt-20" id="registry-api">&lt;/span>
&lt;a href="#registry-api" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>&lt;strong>流程：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>1、获取鉴权信息&lt;/li>
&lt;li>2、检查layer.tar是否已经存在&lt;/li>
&lt;li>3、上传layer.tar&lt;/li>
&lt;li>4、上传image config&lt;/li>
&lt;li>5、上传manifest（非包中的&lt;code>manifest.json&lt;/code>而是&lt;a href="https://github.com/docker/distribution/blob/master/manifest/schema2/manifest.go#L63" target="_blank" rel="noopener">Manifest struct&lt;/a>）&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>这里只列出了在上传的时候需要用的api&lt;/p>
&lt;/blockquote>
&lt;p>1、获取鉴权信息&lt;/p>
&lt;p>这里跟registry仓库选择的鉴权方式有关，可选basic auth或者token鉴权。
这里我是以最基本的basic auth为例子，如果是token鉴权的方式参考这里：
&lt;a href="https://docs.docker.com/registry/spec/auth/jwt/" target="_blank" rel="noopener">https://docs.docker.com/registry/spec/auth/jwt/&lt;/a>&lt;/p>
&lt;p>2、检查上传&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>HEAD /v2/image/blobs/&amp;lt;digest&amp;gt;&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>若返回200 OK 则表示存在，不用上传&lt;/p>
&lt;p>3、开始上传服务
我这里是以分块上传的方式进行&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>POST /v2/image/blobs/uploads/&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>如果post请求返回202 accepted，一个url会在location字段返回.&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code> 202 Accepted
Location: /v2/\&amp;lt;image&amp;gt;/blobs/uploads/\&amp;lt;uuid&amp;gt;
Range: bytes=0-&amp;lt;offset&amp;gt;
Content-Length: 0
Docker-Upload-UUID: &amp;lt;uuid&amp;gt; # 可以用来查看上传状态和实现断点续传&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>4、分块上传
根据上一步获取的url，以&lt;code>PATCH&lt;/code>的方式提交分块数据。
如果是最后一块数据上传，则以PUT的方式提交，如下：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code> &amp;gt; PUT /v2/&amp;lt;name&amp;gt;/blob/uploads/&amp;lt;uuid&amp;gt;?digest=&amp;lt;digest&amp;gt;
&amp;gt; Content-Length: &amp;lt;size of chunk&amp;gt;
&amp;gt; Content-Range: &amp;lt;start of range&amp;gt;-&amp;lt;end of range&amp;gt;
&amp;gt; Content-Type: application/octet-stream
&amp;lt;Last Layer Chunk Binary Data&amp;gt;&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>上传layer，image config，manifests信息都是一样的。&lt;/p>
&lt;blockquote>
&lt;p>我暂时只用到了以上api，更多的api参考：https://docs.docker.com/registry/spec/api/&lt;/p>
&lt;/blockquote>
&lt;h2>实现&lt;span class="hx-absolute -hx-mt-20" id="实现">&lt;/span>
&lt;a href="#%e5%ae%9e%e7%8e%b0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>上面说API没啥感觉，还是看代码比较明白，所以实现了这么一个工具：&lt;a href="https://github.com/silenceper/docker-tar-push" target="_blank" rel="noopener">https://github.com/silenceper/docker-tar-push
&lt;/a>&lt;/p>
&lt;p>&lt;strong>Usage:&lt;/strong>&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>push your docker tar archive image without docker.
Usage:
docker-tar-push [flags]
Flags:
-h, --help help for docker-tar-push
--log-level int log-level, 0:Fatal,1:Error,2:Warn,3:Info,4:Debug (default 3)
--password string registry auth password
--registry string registry url
--skip-ssl-verify skip ssl verify
--username string registry auth username&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;strong>Example:&lt;/strong>&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>docker-tar-push alpine:latest --registry=http://localhost:5000&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;strong>参考&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.jianshu.com/p/6a7b80122602" target="_blank" rel="noopener">https://www.jianshu.com/p/6a7b80122602&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/Razikus/dockerregistrypusher" target="_blank" rel="noopener">https://github.com/Razikus/dockerregistrypusher&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.docker.com/registry/spec/auth/jwt/" target="_blank" rel="noopener">https://docs.docker.com/registry/spec/auth/jwt/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/docker/distribution/" target="_blank" rel="noopener">https://github.com/docker/distribution/&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>